generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id          String    @id @default(cuid())
  name        String
  nickname    String
  email       String    @unique
  password    String
  wallets     Wallet[]
  transactions Transaction[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Wallet {
  id             String        @id @default(cuid())
  userId         String
  user           User          @relation(fields: [userId], references: [id])
  name           String
  balance        Float
  type           WalletType
  fareValue      Float?
  color          String
  includeInTotal Boolean
  transactions   Transaction[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Transaction {
  id            String    @id @default(cuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  type          TransactionType
  walletId      String
  wallet        Wallet    @relation(fields: [walletId], references: [id])
  title         String
  description   String
  date          DateTime
  categoryId    String
  category      Category   @relation(fields: [categoryId], references: [id])
  amount        Float
  isVisible     Boolean   @default(true)
  fareValue     Float?
  numberOfTrips Int?
  fromWalletId  String?
  toWalletId    String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}


model Category {
  id           String        @id @default(cuid())
  name         String
  color        String
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

enum WalletType {
  EFECTIVO
  CUENTA_BANCARIA
  AHORROS
  TRANSPORTE
}

enum TransactionType {
  INGRESO
  GASTO
  TRANSPORTE
  TRANSFERENCIA
}
